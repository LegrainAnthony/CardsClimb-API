version: '3'
networks:
  postgres-network:
    driver: bridge

services:
  db:
    image: postgres
    ports:
      - '${POSTGRES_PORT}:5432'
    networks:
      - postgres-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis 
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_HOST: ${REDIS_HOST}
    networks:
      - postgres-network
    command: sh -c "npx prisma migrate deploy && npx prisma migrate dev --name init && npm run seed &&  npm run start:dev"
    ports:
      - '${PORT}:8080'
    volumes:
      - ./src:/usr/src/app/src
      - ./prisma:/usr/src/app/prisma

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '${PGADMIN_PORT}:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db
    networks:
      - postgres-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin/

  db-test:
    image: postgres
    networks:
      - postgres-network
    ports:
      - '${POSTGRES_TEST_PORT}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB_TEST}
      POSTGRES_USER: ${POSTGRES_USER_TEST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-test-data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - postgres-network
    volumes:
      - redis-data:/data

volumes:
  db-data:
  pgadmin-data:
  db-test-data:
  redis-data:

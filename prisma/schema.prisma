generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @default(autoincrement()) @id
    username String
    email String @unique
    hashed_password String
    boxes Box[]
    cards Card[]
}

model Box {
    id Int @default(autoincrement()) @id
    name String
    user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id Int
    box_steps BoxStep[]
    cards Card[]
}

model Card {
    id Int @default(autoincrement()) @id
    reference  String
    question String
    answer String?
    last_revision DateTime?
    future_revision DateTime?
    user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id Int
    box Box? @relation(fields: [box_id], references: [id], onDelete: Cascade)
    box_id Int?
    card_type CardType @relation(fields: [card_type_id], references: [id])
    card_type_id Int
    tags Tag[]
}

model Tag {
    id Int @default(autoincrement()) @id
    name String
    color Color @relation(fields: [color_id], references: [id])
    color_id Int
    cards Card[]
}

model CardType {
    id Int @default(autoincrement()) @id
    name String
    cards Card[]
}

model BoxStep {
    id Int @default(autoincrement()) @id
    interval Int
    box Box @relation(fields: [box_id], references: [id], onDelete: Cascade)
    box_id Int
}

model Color {
    id Int @default(autoincrement()) @id
    name String
    hex String
    tags Tag[]
}
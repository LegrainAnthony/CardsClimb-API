generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int    @id @default(autoincrement())
  username        String
  email           String @unique
  hashed_password String
  boxes           Box[]
  cards           Card[]
}

model Box {
  id        Int       @id @default(autoincrement())
  name      String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  box_steps BoxStep[]
  cards     Card[]
}

model Card {
  id              Int       @id @default(autoincrement())
  reference       String
  question        String
  answer          String?
  last_revision   DateTime?
  future_revision DateTime?
  user            User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         Int
  box             Box?      @relation(fields: [box_id], references: [id], onDelete: Cascade)
  box_id          Int?
  boxStep         BoxStep?  @relation(fields: [box_step_id], references: [id], onDelete: Cascade)
  box_step_id     Int?
  card_type       CardType  @relation(fields: [card_type_id], references: [id])
  card_type_id    Int
  tags            Tag[]
}

model Tag {
  id       Int    @id @default(autoincrement())
  name     String
  color    Color  @relation(fields: [color_id], references: [id])
  color_id Int
  cards    Card[]
}

model CardType {
  id    Int    @id @default(autoincrement())
  name  String @unique
  cards Card[]
}

model BoxStep {
  id       Int    @id @default(autoincrement())
  interval Int
  box      Box    @relation(fields: [box_id], references: [id], onDelete: Cascade)
  box_id   Int
  Card     Card[]
}

model Color {
  id   Int    @id @default(autoincrement())
  name String
  hex  String
  tags Tag[]
}

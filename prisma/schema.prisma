generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id Int @default(autoincrement()) @id
    username String
    email String @unique
    hashed_password String
    boxes Box[]
    cards Card[]
    tags Tag[]
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

model Box {
  id        Int       @id @default(autoincrement())
  name      String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  box_steps BoxStep[]
  cards     Card[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Card {
  id              Int       @id @default(autoincrement())
  reference       String
  question        String
  answer          String?
  last_revision   BigInt?
  future_revision BigInt?
  user            User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         Int
  box             Box?      @relation(fields: [box_id], references: [id], onDelete: Cascade)
  box_id          Int?
  boxStep         BoxStep?  @relation(fields: [box_step_id], references: [id], onDelete: Cascade)
  box_step_id     Int?
  card_type       CardType  @relation(fields: [card_type_id], references: [id])
  card_type_id    Int
  tags            Tag[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Tag {
    id Int @default(autoincrement()) @id
    name String
    color Color @relation(fields: [color_id], references: [id])
    color_id Int
    cards Card[]
    user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id Int
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

model CardType {
  id    Int    @id @default(autoincrement())
  name  String @unique
  cards Card[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model BoxStep {
  id       Int    @id @default(autoincrement())
  interval Int
  order    Int
  box      Box    @relation(fields: [box_id], references: [id], onDelete: Cascade)
  box_id   Int
  Card     Card[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Color {
  id   Int    @id @default(autoincrement())
  name String
  hex  String
  tags Tag[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
